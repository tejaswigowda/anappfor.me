var caresadminappearanceinit = function()
{
 	getElementObject("appearanceInputBox").innerHTML = 
 					"<div class='textLeftDI'> Brand Text Color </div>"+
 					"<a href='javascript:btcChange()'>"+
						"<div class='colorSwatch' id='btcPreview'> </div>"+
					"</a>"+
						"<div class='textLeftDI'> Text Color </div>"+
 					"<a href='javascript:tcChange()'>"+
						"<div class='colorSwatch' id='tcPreview'> </div>"+
					"</a>"+
						"<div class='textLeftDI'> Background Color </div>"+
 					"<a href='javascript:bgcChange()'>"+
						"<div class='colorSwatch' id='bgcPreview'> </div>"+
					"</a>"+
					"<div class='fileUploadWrapper link'>"+
						"<div class='fileUploadText textLeftDI'> Upload/Change Applet Icon</div>"+
						'<input type="file" name="iconUpload" id="iconUpload" onchange="iconUploaded()">'+
					"</div>";
					
 // setTimeout('$("#appearanceInputBox .inputSlider").slider(); $(".ui-loader").hide();', 1000);
}


var data89;

function iconUploaded()
{
  var fd = new FormData();
  //getElementObject("iconUploadText").innerHTML = "Loading icon. Please wait";
  var filename = $('#iconUpload').get(0).files[0].name;
  var size = $('#iconUpload').get(0).files[0].size;
  if(size > 256000){
    messageHandler.flashNewMessage("File too large", "please ensure your icon is under 256 Kb");  
    return;
  }
  fd.append('date', (new Date()).toString());
  fd.append('input', $('#iconUpload').get(0).files[0]);
  var t = filename.substring(filename.length-4, filename.length).toLowerCase();
  if(t != ".png"){
    messageHandler.flashNewMessage("Incorrect File", "please ensure your icon is a png image");  
    return;
  }

  getElementStyleObject("appPreview").backgroundImage = "";
  var fileInput = Location + "icon" + t;
  tempimg1 = fileInput;
  fd.append('fileInput', fileInput);
  activityIndicator.setText("Uploading Icon...");
  activityIndicator.show();
  var xhr = new XMLHttpRequest();
  xhr.onreadystatechange = function() {
    if (xhr.readyState != 4) { return; }
	activityIndicator.hide();
    getElementObject("iconUpload").value = "";
    iconUpload_CB2();
  };
  xhr.open("POST", "/uploadFile", true);
  xhr.send(fd);


}

function iconUpload_CB2(){
  getElementStyleObject("appPreview").backgroundImage = "url(https://s3-us-west-1.amazonaws.com/caresappme/" + Location + "icon.png?t=" + new Date().getTime()  + ")";

}


function appearanceActive()
{
  getAppearanceInfo();
  iconUpload_CB2();
}

function getAppearanceInfo()
{
  activityIndicator.show();
  var url = App.mainURL;
  url = url + "getLocationInfo";
  url = url + "?loc=" + Location;
  var callback = getAppearanceInfo_CB;
  loadFile(url, callback);
}

var data68;

function getAppearanceInfo_CB(data)
{
  activityIndicator.hide();
  var hInfo = JSON.parse(data);
  data68 = hInfo;
  var hIKeys = Object.keys(hInfo);
  var temp;
  var addrstr = "";
  temp = "name";
  if(hIKeys.contains(temp) >= 0){
    addrstr += "<div>" + decodeURIComponent(hInfo[temp]) + "</div>";
  }
  temp = "addr";
    if(hIKeys.contains(temp) >=0){
    	    addrstr = addrstr + "<div>" + decodeURIComponent(hInfo[temp]) + "</div>";
    	      }
            addrstr += "<div>";
      temp = "city";
        if(hIKeys.contains(temp) >=0){
        	    addrstr = addrstr + decodeURIComponent(hInfo[temp]);
        	      }
          temp = "zip";
            if(hIKeys.contains(temp) >=0){
            	    addrstr = addrstr + " " + decodeURIComponent(hInfo[temp]);
            	      }
            addrstr += "</div>";
                temp = "tel";
                  if(hIKeys.contains(temp) >=0){
                  	      var temp1 = decodeURIComponent(hInfo[temp]).split(",");
                  	          for(var t=0; t< temp1.length; t++){
                  	          	       addrstr = addrstr + "<div>" + temp1[t] + "</div>";
                  	          	            }
                  	            }
    getElementObject("headerTitlePreview2").innerHTML = addrstr;
  
  temp = "color";
  if(hIKeys.contains(temp) < 0){
    temp = ["0", "0", "0", "100", "100", "100", "255", "255", "255"];
  }
  else{
    temp = JSON.parse(hInfo[temp]);
  }

  appNumbers = temp;
  /*for(var i=0; i<appNumbers.length; i++){
    getElementObject(appNumbers[i]).value = temp[i];
  }*/
  // $("#appearanceInputBox .inputSlider").slider("refresh");
  appPreviewUpdate(false);

  dataEdited= false;
  unsavedDataPlugin.hide();
}

function cancelAppearanceClicked()
{
  var t = getAppearanceInfo();
  unsavedDataPlugin.hide();
  dataEdited = false;
}

function saveAppearanceClicked()
{
  var t = appPreviewUpdate(false);
  if(t!=null){
    saveAppearanceInfo();
  }
}


function saveAppearanceInfo()
{
  activityIndicator.show();
  var url = App.mainURL;
  url = url + "editLocation";
  url = url + "?loc=" + Location;
  url = url + "&color=" + encodeURIComponent(JSON.stringify(appPreviewUpdate(false)));
  console.log(url);
  var callback = function(){
    activityIndicator.hide();
  }
  loadFile(url, callback);
}

function appearanceDeActive()
{
  getElementObject("iconUpload").value = "";
  getElementObject("iconUploadText").innerHTML = "Upload/Change App Icon";
}

function appChanged()
{
  dataEdited = true;
  unsavedDataPlugin.show();
}

function isNormalInteger(str) {
      var n = ~~Number(str);
      return String(n) === str && n >= 0 && n <=255;
}

var appNumbers = null;

function appPreviewUpdateTrue(){
  appChanged();
  appPreviewUpdate(false);
}

function appPreviewUpdate(flag)
{
  var temp;
  var valid = [true,true,true];
  var redColor = "rgb(209, 72, 54)";
  var colors = new Array();
  if(!appNumbers) return;

  for(var i=0; i< appNumbers.length; i++){
    temp = appNumbers[i];
    if(isNormalInteger(temp)){
      colors[colors.length] = temp;
    }
    else{
      valid[parseInt(i/3)] = false;
    }
  }
  
  data0 = colors; 
  data1 = valid; 

  if(valid[0]){
    getElementStyleObject("appPreview").backgroundColor = "rgb(" + colors[0] + "," + colors[1] + "," + colors[2] + ")";
    getElementStyleObject("bgcPreview").backgroundColor = "rgb(" + colors[0] + "," + colors[1] + "," + colors[2] + ")";
  }
  else{
    getElementStyleObject("appPreview").backgroundColor = "";
    getElementStyleObject("bgcPreview").backgroundColor = "";
  }
  if(valid[1]){
    getElementStyleObject("appPreview").color = "rgb(" + colors[3] + "," + colors[4] + "," + colors[5] + ")";
    getElementStyleObject("tcPreview").backgroundColor = "rgb(" + colors[3] + "," + colors[4] + "," + colors[5] + ")";
  }
  else{
    getElementStyleObject("appPreview").color = "";
    getElementStyleObject("tcPreview").backgroundColor = "";
  }
  if(valid[2]){
    getElementStyleObject("headerPreview").color = "rgb(" + colors[6] + "," + colors[7] + "," + colors[8] + ")";
    getElementStyleObject("btcPreview").backgroundColor = "rgb(" + colors[6] + "," + colors[7] + "," + colors[8] + ")";
  }
  else{
    getElementStyleObject("headerPreview").color = "";
    getElementStyleObject("btcPreview").backgroundColor = "";
  }

  if(valid[0] && valid[1] && valid[2]){
    return colors;
  }
  else{
    return null;
  }
}

function bgcChange()
{
	colorInput.display(appNumbers[0], appNumbers[1], appNumbers[2], "Applet Background Color", function(){updateBGColor()});
}

function btcChange()
{
	colorInput.display(appNumbers[3], appNumbers[4], appNumbers[5], "Applet Name Color", function(){updateBTColor()});
}

function tcChange()
{
	colorInput.display(appNumbers[6], appNumbers[7], appNumbers[8], "Applet Text Color", function(){updateTColor()});
}

function updateBGColor()
{
}
